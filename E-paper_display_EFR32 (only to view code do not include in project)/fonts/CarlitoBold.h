/*
 * CarlitoBold.h
 *
 *  Created on: 29-Sep-2018
 *      Author: UTF-Labs-2
 */

#ifndef CARLITOBOLD_H_
#define CARLITOBOLD_H_

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <stddef.h>
#include "stddef.h"
#include <stdint.h>
#include "stdbool.h"

const uint8_t CarlitoBoldBitmaps[] = {
  0xFF, 0xFF, 0x0F, 0xC0, 0xDE, 0xF7, 0xBC, 0x80, 0x1B, 0x09, 0x84, 0xC6,
  0x47, 0xFB, 0xF8, 0xD8, 0x6C, 0xFF, 0x7F, 0x99, 0x0D, 0x86, 0xC0, 0x08,
  0x11, 0xFB, 0xFD, 0x9E, 0x1F, 0x0F, 0x17, 0xAF, 0xF9, 0xC1, 0x00, 0x38,
  0x63, 0xE2, 0x13, 0x31, 0x9B, 0x04, 0xD0, 0x3D, 0x80, 0xC8, 0x00, 0xDE,
  0x0D, 0xB0, 0x4C, 0xC6, 0x66, 0x63, 0xE3, 0x0E, 0x00, 0x1E, 0x03, 0xF0,
  0x73, 0x06, 0x00, 0x70, 0x03, 0x80, 0x78, 0xCE, 0xCC, 0xC6, 0xCC, 0x38,
  0xC3, 0x8F, 0xFC, 0x7C, 0xF0, 0xFF, 0xC0, 0x23, 0x66, 0x6C, 0xCC, 0xCC,
  0xCC, 0x66, 0x63, 0x20, 0x4C, 0xC6, 0x66, 0x62, 0x32, 0x66, 0x66, 0xCC,
  0x40, 0x25, 0x5C, 0xEA, 0x90, 0x08, 0x04, 0x02, 0x01, 0x0F, 0xFF, 0xFC,
  0x20, 0x10, 0x08, 0x00, 0xDF, 0xAC, 0xFF, 0x5F, 0x00, 0x03, 0x06, 0x06,
  0x04, 0x0C, 0x08, 0x18, 0x10, 0x30, 0x20, 0x60, 0x60, 0xC0, 0x1C, 0x1F,
  0x98, 0xCC, 0x6E, 0x3F, 0x0F, 0x87, 0xC7, 0x63, 0x31, 0x8F, 0xC3, 0x80,
  0x18, 0x71, 0xE7, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x31, 0xFB, 0xF0, 0x3C,
  0x7E, 0xC6, 0xC6, 0x06, 0x0E, 0x0C, 0x18, 0x30, 0x70, 0xFE, 0xFF, 0x3C,
  0x7E, 0xC6, 0x46, 0x06, 0x1C, 0x1E, 0x07, 0x47, 0xC6, 0xFE, 0x7C, 0x07,
  0x07, 0x83, 0xC3, 0x63, 0x31, 0x99, 0x8D, 0xFF, 0xFF, 0x81, 0x80, 0xC0,
  0x60, 0x7E, 0xF9, 0x02, 0x0F, 0x9F, 0x81, 0x83, 0x07, 0x0F, 0xF3, 0xC0,
  0x0E, 0x1C, 0x38, 0x30, 0x60, 0xFC, 0xFE, 0xC7, 0xC7, 0xC7, 0xC6, 0xFE,
  0x3C, 0xFF, 0xFF, 0x06, 0x0E, 0x0C, 0x0C, 0x18, 0x18, 0x30, 0x30, 0x70,
  0x60, 0x3C, 0xFE, 0xC6, 0xC6, 0xC6, 0x7C, 0x7C, 0xC6, 0xC7, 0xC7, 0xC6,
  0xFE, 0x7C, 0x3C, 0x7E, 0xC7, 0xC3, 0xC3, 0xE7, 0x7E, 0x36, 0x0C, 0x18,
  0x38, 0x70, 0xFD, 0x00, 0x17, 0xE0, 0xFD, 0x00, 0x17, 0xEB, 0x00, 0x04,
  0x33, 0xFC, 0xE1, 0xE1, 0xC1, 0xFF, 0xFC, 0x07, 0xFF, 0xE0, 0x81, 0xC1,
  0xE0, 0xF0, 0xE7, 0xBC, 0x60, 0x79, 0xF8, 0x30, 0x70, 0xC3, 0x0C, 0x18,
  0x00, 0x00, 0xC3, 0x83, 0x00, 0x0F, 0x81, 0xFF, 0x1C, 0x18, 0xC0, 0x6C,
  0x7D, 0x67, 0xCE, 0x66, 0x73, 0x32, 0x99, 0xB6, 0xFF, 0x33, 0x30, 0xC0,
  0x07, 0x02, 0x0F, 0xF8, 0x1E, 0x00, 0x0E, 0x01, 0xC0, 0x6C, 0x0D, 0x81,
  0xB0, 0x63, 0x0C, 0x61, 0xFC, 0x7F, 0xCC, 0x19, 0x83, 0x70, 0x70, 0xFE,
  0x7F, 0xB0, 0xD8, 0x6C, 0x37, 0xF3, 0xFD, 0x86, 0xC3, 0xE1, 0xBF, 0xDF,
  0xC0, 0x1F, 0x1F, 0xDC, 0x4C, 0x06, 0x07, 0x03, 0x80, 0xC0, 0x60, 0x38,
  0x4F, 0xE3, 0xE0, 0xFE, 0x3F, 0xCC, 0x3B, 0x07, 0xC1, 0xF0, 0x3C, 0x0F,
  0x07, 0xC1, 0xF0, 0xEF, 0xF3, 0xF8, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xBF,
  0x60, 0xC1, 0x83, 0xFF, 0xF0, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xBF, 0x60,
  0xC1, 0x83, 0x06, 0x00, 0x0F, 0x87, 0xFD, 0xC1, 0x30, 0x06, 0x01, 0xC0,
  0x38, 0x7B, 0x0F, 0x60, 0x66, 0x0C, 0xFF, 0x87, 0xC0, 0xC1, 0xE0, 0xF0,
  0x78, 0x3C, 0x1F, 0xFF, 0xFF, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x30, 0xFF,
  0xFF, 0xFF, 0xFF, 0xF0, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xFD, 0xE0,
  0xC3, 0xE3, 0xB3, 0x99, 0x8D, 0xC7, 0xC3, 0xF1, 0x98, 0xCE, 0x63, 0x31,
  0xD8, 0x70, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0F, 0xFF, 0xE0,
  0x1F, 0x80, 0xFF, 0x03, 0xFC, 0x1F, 0xD8, 0x7F, 0x73, 0x7C, 0xCD, 0xF3,
  0xE7, 0xC7, 0x9F, 0x0C, 0x7C, 0x21, 0xF0, 0x07, 0xC0, 0xF8, 0x3F, 0x0F,
  0xC3, 0xF8, 0xF7, 0x3C, 0xEF, 0x1B, 0xC7, 0xF0, 0xFC, 0x1F, 0x03, 0x0F,
  0x83, 0xFC, 0x70, 0xE6, 0x06, 0x60, 0x7E, 0x07, 0xE0, 0x76, 0x07, 0x60,
  0x67, 0x0E, 0x3F, 0xC0, 0xF8, 0xFC, 0xFE, 0xC7, 0xC3, 0xC3, 0xC7, 0xFE,
  0xF8, 0xC0, 0xC0, 0xC0, 0xC0, 0x1F, 0x07, 0xF8, 0xE1, 0xCC, 0x0C, 0xC0,
  0xEC, 0x0E, 0xC0, 0xEC, 0x0E, 0xC0, 0xCE, 0x1C, 0x7F, 0x81, 0xF8, 0x00,
  0xC0, 0x07, 0xFC, 0x7F, 0x31, 0xD8, 0x6C, 0x36, 0x3B, 0xF9, 0xF8, 0xCE,
  0x63, 0x31, 0xD8, 0x70, 0x3E, 0x7F, 0x62, 0x60, 0x70, 0x7E, 0x1F, 0x07,
  0x03, 0x43, 0xFE, 0x3C, 0xFF, 0xFF, 0xC7, 0x03, 0x81, 0xC0, 0xE0, 0x70,
  0x38, 0x1C, 0x0E, 0x07, 0x03, 0x80, 0xC1, 0xF0, 0x7C, 0x1F, 0x07, 0xC1,
  0xF0, 0x7C, 0x1F, 0x07, 0xC1, 0xD8, 0x67, 0xF8, 0x78, 0xE0, 0xEC, 0x19,
  0x87, 0x38, 0xC3, 0x18, 0x67, 0x0C, 0xC0, 0xD8, 0x1B, 0x03, 0xC0, 0x38,
  0x07, 0x00, 0xE1, 0x83, 0x61, 0xC7, 0x61, 0xC7, 0x73, 0xC6, 0x73, 0xC6,
  0x33, 0x6E, 0x36, 0x6C, 0x3E, 0x6C, 0x1E, 0x3C, 0x1C, 0x38, 0x1C, 0x38,
  0x1C, 0x18, 0xE1, 0xDC, 0x63, 0x30, 0xEC, 0x1E, 0x07, 0x81, 0xE0, 0x78,
  0x37, 0x1C, 0xE6, 0x3B, 0x87, 0xE1, 0xB1, 0xD8, 0xC6, 0x63, 0x60, 0xF0,
  0x70, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x7F, 0x7F, 0x07, 0x0E, 0x0C,
  0x1C, 0x18, 0x38, 0x30, 0x70, 0xFF, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC,
  0xCC, 0xCC, 0xFF, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30, 0x18, 0x18, 0x08,
  0x0C, 0x04, 0x06, 0x03, 0xFF, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFF,
  0x18, 0x0E, 0x0D, 0x86, 0xC6, 0x37, 0x1C, 0xFF, 0xFF, 0xC0, 0xE7, 0x7D,
  0xF9, 0x18, 0x33, 0xFF, 0xF1, 0xFF, 0xF6, 0xC0, 0xC0, 0xC0, 0xC0, 0xDE,
  0xFE, 0xC7, 0xC3, 0xC3, 0xC3, 0xC7, 0xFE, 0xDC, 0x3C, 0xFD, 0x83, 0x0E,
  0x0C, 0x18, 0xBF, 0x3C, 0x07, 0x07, 0x07, 0x07, 0x7F, 0xFF, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xFF, 0x7B, 0x3C, 0xFE, 0xC6, 0xFE, 0xFF, 0xC0, 0xC0,
  0x7E, 0x3C, 0x1C, 0xF7, 0x1C, 0xFD, 0xF7, 0x1C, 0x71, 0xC7, 0x1C, 0x70,
  0x3F, 0x7F, 0x66, 0x66, 0x7E, 0x38, 0x60, 0x7E, 0x7F, 0xC3, 0x7F, 0x3C,
  0xC0, 0xC0, 0xC0, 0xC0, 0xDC, 0xFE, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0xDF, 0x0D, 0xB6, 0xDB, 0x6C, 0x31, 0xCC, 0x03, 0x18, 0xC6, 0x31,
  0x8C, 0x63, 0x19, 0xDC, 0xC0, 0xC0, 0xC0, 0xC0, 0xC6, 0xCC, 0xDC, 0xF8,
  0xF8, 0xDC, 0xCC, 0xCE, 0xC7, 0xFF, 0xFF, 0xFF, 0xC0, 0xDC, 0xE7, 0xFF,
  0xB1, 0xCF, 0x8E, 0x7C, 0x73, 0xE3, 0x9F, 0x1C, 0xF8, 0xE7, 0xC7, 0x38,
  0xDC, 0xFE, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0x3C, 0xFE, 0xC7,
  0xC3, 0xC3, 0xC3, 0xC7, 0xFE, 0x3C, 0xDE, 0xFE, 0xC7, 0xC3, 0xC3, 0xC3,
  0xC7, 0xFE, 0xDC, 0xC0, 0xC0, 0xC0, 0x7B, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0xFF, 0x7F, 0x07, 0x07, 0x07, 0xDF, 0xF1, 0x8C, 0x63, 0x18, 0xC0,
  0x3C, 0xFD, 0x83, 0x83, 0xC1, 0xC1, 0xFE, 0x78, 0x30, 0xC3, 0x3F, 0xFD,
  0xC7, 0x1C, 0x71, 0xC3, 0xCF, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0xFF, 0x7B, 0xE3, 0x63, 0x67, 0x66, 0x36, 0x36, 0x3C, 0x1C, 0x18, 0xC3,
  0x1B, 0x38, 0xD9, 0xC6, 0xCB, 0x66, 0xDB, 0x1E, 0x58, 0xF3, 0x87, 0x1C,
  0x18, 0xE0, 0xE7, 0x76, 0x36, 0x3C, 0x1C, 0x3C, 0x3E, 0x66, 0xE7, 0xE3,
  0x63, 0x66, 0x76, 0x36, 0x34, 0x1C, 0x1C, 0x18, 0x18, 0x30, 0x30, 0x7E,
  0xFC, 0x30, 0xC3, 0x86, 0x1C, 0x3F, 0xFE, 0x37, 0xCC, 0x46, 0x6C, 0xC6,
  0x64, 0xCC, 0x73, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x33, 0x32, 0x23, 0x33,
  0x23, 0x33, 0xFE, 0x31, 0xBF, 0xB3, 0xC0 };

const GFXglyph CarlitoBoldGlyphs[] = {
  {     0,   0,   0,   4,    0,    1 },   // 0x20 ' '
  {     0,   2,  13,   6,    2,  -12 },   // 0x21 '!'
  {     4,   5,   5,   8,    1,  -12 },   // 0x22 '"'
  {     8,   9,  13,   9,    0,  -12 },   // 0x23 '#'
  {    23,   7,  13,   9,    1,  -11 },   // 0x24 '$'
  {    35,  13,  13,  13,    0,  -12 },   // 0x25 '%'
  {    57,  12,  13,  13,    1,  -12 },   // 0x26 '&'
  {    77,   2,   5,   4,    1,  -12 },   // 0x27 '''
  {    79,   4,  17,   6,    1,  -13 },   // 0x28 '('
  {    88,   4,  17,   6,    1,  -13 },   // 0x29 ')'
  {    97,   5,   6,   9,    2,  -12 },   // 0x2A '*'
  {   101,   9,   9,   9,    0,   -9 },   // 0x2B '+'
  {   112,   3,   5,   5,    1,   -2 },   // 0x2C ','
  {   114,   4,   2,   6,    1,   -5 },   // 0x2D '-'
  {   115,   3,   3,   5,    1,   -2 },   // 0x2E '.'
  {   117,   8,  13,   8,    0,  -12 },   // 0x2F '/'
  {   130,   9,  12,   9,    0,  -11 },   // 0x30 '0'
  {   144,   7,  12,   9,    1,  -11 },   // 0x31 '1'
  {   155,   8,  12,   9,    1,  -11 },   // 0x32 '2'
  {   167,   8,  12,   9,    1,  -11 },   // 0x33 '3'
  {   179,   9,  12,   9,    0,  -11 },   // 0x34 '4'
  {   193,   7,  12,   9,    1,  -11 },   // 0x35 '5'
  {   204,   8,  13,   9,    1,  -12 },   // 0x36 '6'
  {   217,   8,  12,   9,    1,  -11 },   // 0x37 '7'
  {   229,   8,  13,   9,    1,  -12 },   // 0x38 '8'
  {   242,   8,  12,   9,    1,  -11 },   // 0x39 '9'
  {   254,   3,   9,   5,    1,   -8 },   // 0x3A ':'
  {   258,   3,  11,   5,    1,   -8 },   // 0x3B ';'
  {   263,   6,   8,   9,    1,   -9 },   // 0x3C '<'
  {   269,   7,   5,   9,    1,   -7 },   // 0x3D '='
  {   274,   7,   8,   9,    1,   -9 },   // 0x3E '>'
  {   281,   7,  13,   8,    1,  -12 },   // 0x3F '?'
  {   293,  13,  15,  16,    2,  -11 },   // 0x40 '@'
  {   318,  11,  12,  11,    0,  -11 },   // 0x41 'A'
  {   335,   9,  12,  10,    1,  -11 },   // 0x42 'B'
  {   349,   9,  12,  10,    0,  -11 },   // 0x43 'C'
  {   363,  10,  12,  11,    1,  -11 },   // 0x44 'D'
  {   378,   7,  12,   9,    1,  -11 },   // 0x45 'E'
  {   389,   7,  12,   8,    1,  -11 },   // 0x46 'F'
  {   400,  11,  12,  11,    0,  -11 },   // 0x47 'G'
  {   417,   9,  12,  11,    1,  -11 },   // 0x48 'H'
  {   431,   3,  12,   5,    1,  -11 },   // 0x49 'I'
  {   436,   5,  12,   6,    0,  -11 },   // 0x4A 'J'
  {   444,   9,  12,  10,    1,  -11 },   // 0x4B 'K'
  {   458,   6,  12,   8,    1,  -11 },   // 0x4C 'L'
  {   467,  14,  12,  16,    1,  -11 },   // 0x4D 'M'
  {   488,  10,  12,  12,    1,  -11 },   // 0x4E 'N'
  {   503,  12,  12,  12,    0,  -11 },   // 0x4F 'O'
  {   521,   8,  12,  10,    1,  -11 },   // 0x50 'P'
  {   533,  12,  14,  12,    1,  -11 },   // 0x51 'Q'
  {   554,   9,  12,  10,    1,  -11 },   // 0x52 'R'
  {   568,   8,  12,   9,    0,  -11 },   // 0x53 'S'
  {   580,   9,  12,   9,    0,  -11 },   // 0x54 'T'
  {   594,  10,  12,  12,    1,  -11 },   // 0x55 'U'
  {   609,  11,  12,  11,    0,  -11 },   // 0x56 'V'
  {   626,  16,  12,  16,    0,  -11 },   // 0x57 'W'
  {   650,  10,  12,  10,    0,  -11 },   // 0x58 'X'
  {   665,   9,  12,   9,    0,  -11 },   // 0x59 'Y'
  {   679,   8,  12,   9,    0,  -11 },   // 0x5A 'Z'
  {   691,   4,  16,   6,    1,  -12 },   // 0x5B '['
  {   699,   8,  13,   8,    0,  -12 },   // 0x5C '\'
  {   712,   4,  16,   6,    1,  -12 },   // 0x5D ']'
  {   720,   9,   6,   9,    0,  -12 },   // 0x5E '^'
  {   727,   9,   2,   9,    0,    2 },   // 0x5F '_'
  {   730,   4,   2,   5,    1,  -12 },   // 0x60 '`'
  {   731,   7,   9,   9,    1,   -8 },   // 0x61 'a'
  {   739,   8,  13,  10,    1,  -12 },   // 0x62 'b'
  {   752,   7,   9,   8,    0,   -8 },   // 0x63 'c'
  {   760,   8,  13,  10,    1,  -12 },   // 0x64 'd'
  {   773,   8,   9,   9,    1,   -8 },   // 0x65 'e'
  {   782,   6,  13,   6,    0,  -12 },   // 0x66 'f'
  {   792,   8,  12,   9,    0,   -8 },   // 0x67 'g'
  {   804,   8,  13,  10,    1,  -12 },   // 0x68 'h'
  {   817,   3,  13,   4,    1,  -12 },   // 0x69 'i'
  {   822,   5,  16,   5,   -1,  -12 },   // 0x6A 'j'
  {   832,   8,  13,   9,    1,  -12 },   // 0x6B 'k'
  {   845,   2,  13,   4,    1,  -12 },   // 0x6C 'l'
  {   849,  13,   9,  15,    1,   -8 },   // 0x6D 'm'
  {   864,   8,   9,  10,    1,   -8 },   // 0x6E 'n'
  {   873,   8,   9,  10,    1,   -8 },   // 0x6F 'o'
  {   882,   8,  12,  10,    1,   -8 },   // 0x70 'p'
  {   894,   8,  12,  10,    1,   -8 },   // 0x71 'q'
  {   906,   5,   9,   6,    1,   -8 },   // 0x72 'r'
  {   912,   7,   9,   7,    0,   -8 },   // 0x73 's'
  {   920,   6,  12,   6,    0,  -11 },   // 0x74 't'
  {   929,   8,   9,  10,    1,   -8 },   // 0x75 'u'
  {   938,   8,   9,   9,    0,   -8 },   // 0x76 'v'
  {   947,  13,   9,  13,    0,   -8 },   // 0x77 'w'
  {   962,   8,   9,   8,    0,   -8 },   // 0x78 'x'
  {   971,   8,  12,   9,    0,   -8 },   // 0x79 'y'
  {   983,   7,   9,   7,    0,   -8 },   // 0x7A 'z'
  {   991,   4,  16,   6,    1,  -12 },   // 0x7B '{'
  {   999,   2,  16,   9,    3,  -12 },   // 0x7C '|'
  {  1003,   4,  16,   6,    1,  -12 },   // 0x7D '}'
  {  1011,   9,   3,   9,    0,   -6 } }; // 0x7E '~'

const GFXfont CarlitoBold = {
  (uint8_t  *)CarlitoBoldBitmaps,
  (GFXglyph *)CarlitoBoldGlyphs,
  0x20, 0x7E, 22 };

// Approx. 1687 bytes


#endif /* CARLITOBOLD_H_ */
